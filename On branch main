[1mdiff --git a/middleware.js b/middleware.js[m
[1mindex ba8248d..aa67f97 100644[m
[1m--- a/middleware.js[m
[1m+++ b/middleware.js[m
[36m@@ -1,35 +1,70 @@[m
[31m-import { next } from "@vercel/edge";[m
[31m-[m
[31m-export const config = {[m
[31m-  matcher: [[m
[31m-    /*[m
[31m-     * Match all request paths except for the ones starting with:[m
[31m-     * - api (API routes)[m
[31m-     * - _next/static (static files)[m
[31m-     * - _next/image (image optimization files)[m
[31m-     * - favicon.ico (favicon file)[m
[31m-     * - assets (static assets like images, css, js)[m
[31m-     */[m
[31m-    "/((?!api|_next/static|_next/image|favicon.ico|assets).*)",[m
[31m-  ],[m
[31m-};[m
[32m+[m[32mimport { next } from '@vercel/edge';[m
 [m
 export default function middleware(request) {[m
[31m-  const authorizationHeader = request.headers.get("authorization");[m
[32m+[m[32m  const url = new URL(request.url);[m
[32m+[m[32m  const pathname = url.pathname;[m
[32m+[m
[32m+[m[32m  console.log(`=== Middleware processing: ${pathname} ===`);[m
[32m+[m
[32m+[m[32m  // ÈùôÁöÑ„Ç¢„Çª„ÉÉ„Éà„ÅØË™çË®º„Çí„Çπ„Ç≠„ÉÉ„Éó[m
[32m+[m[32m  const isStaticAsset = pathname.startsWith('/assets/') ||[m
[32m+[m[32m                       pathname.endsWith('.jpg') ||[m
[32m+[m[32m                       pathname.endsWith('.jpeg') ||[m
[32m+[m[32m                       pathname.endsWith('.png') ||[m
[32m+[m[32m                       pathname.endsWith('.gif') ||[m
[32m+[m[32m                       pathname.endsWith('.svg') ||[m
[32m+[m[32m                       pathname.endsWith('.ico') ||[m
[32m+[m[32m                       pathname.endsWith('.css') ||[m
[32m+[m[32m                       pathname.endsWith('.js') ||[m
[32m+[m[32m                       pathname.endsWith('.woff') ||[m
[32m+[m[32m                       pathname.endsWith('.woff2') ||[m
[32m+[m[32m                       pathname.endsWith('.ttf') ||[m
[32m+[m[32m                       pathname.endsWith('.webmanifest') ||[m
[32m+[m[32m                       pathname.endsWith('.webp') ||[m
[32m+[m[32m                       pathname.endsWith('.avif') ||[m
[32m+[m[32m                       pathname === '/favicon.ico' ||[m
[32m+[m[32m                       pathname === '/favicon.svg' ||[m
[32m+[m[32m                       pathname === '/apple-touch-icon.png' ||[m
[32m+[m[32m                       pathname === '/manifest.webmanifest' ||[m
[32m+[m[32m                       pathname === '/_favicon.svg';[m
[32m+[m
[32m+[m[32m  if (isStaticAsset) {[m
[32m+[m[32m    console.log(`‚úÖ Skipping auth for static asset: ${pathname}`);[m
[32m+[m[32m    return next();[m
[32m+[m[32m  }[m
 [m
[31m-  if (authorizationHeader) {[m
[31m-    const basicAuth = authorizationHeader.split(" ")[1];[m
[31m-    const [user, password] = atob(basicAuth).toString().split(":");[m
[32m+[m[32m  console.log(`üîí Auth required for: ${pathname}`);[m
 [m
[31m-    if (user === process.env.BASIC_AUTH_USER && password === process.env.BASIC_AUTH_PASSWORD) {[m
[31m-      return next();[m
[31m-    }[m
[32m+[m[32m  // BasicË™çË®º„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ[m
[32m+[m[32m  const auth = request.headers.get('authorization');[m
[32m+[m
[32m+[m[32m  if (!auth || !auth.startsWith('Basic ')) {[m
[32m+[m[32m    return new Response('Basic Auth required', {[m
[32m+[m[32m      status: 401,[m
[32m+[m[32m      headers: {[m
[32m+[m[32m        'WWW-Authenticate': 'Basic realm="Secure Area"',[m
[32m+[m[32m      },[m
[32m+[m[32m    });[m
   }[m
 [m
[31m-  return new Response("Basic Auth required", {[m
[32m+[m[32m  const base64 = auth.split(' ')[1];[m
[32m+[m[32m  const credentials = atob(base64);[m
[32m+[m[32m  const [username, password] = credentials.split(':');[m
[32m+[m
[32m+[m[32m  if (username === process.env.BASIC_AUTH_USER && password === process.env.BASIC_AUTH_PASSWORD) {[m
[32m+[m[32m    return next();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return new Response('Invalid credentials', {[m
     status: 401,[m
     headers: {[m
[31m-      "WWW-Authenticate": "Basic realm='Secure Area'",[m
[32m+[m[32m      'WWW-Authenticate': 'Basic realm="Secure Area"',[m
     },[m
   });[m
 }[m
[32m+[m
[32m+[m[32mexport const config = {[m
[32m+[m[32m  matcher: [[m
[32m+[m[32m    '/((?!api|_next/static|_next/image|assets|favicon|manifest).*)',[m
[32m+[m[32m  ],[m
[32m+[m[32m};[m
